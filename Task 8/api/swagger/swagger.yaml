swagger: '2.0'
info:
  description: |
    Homework 8
  version: 1.0.0
  title: Homework8
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
# host: petstore.swagger.io
# basePath: /v2
tags:
- name: product
  description: Operations about product
- name: user
  description: Operations about user
  
# schemes:
# - http
paths:
  /product:
    x-swagger-router-controller: product 
    post:
      tags:
      - product
      summary: Add a new product to the store
      operationId: addProduct
      consumes:
      - application/json
      - application/xml
      produces:
      - application/json
      - application/xml
      parameters:
      - in: body
        name: body
        description: Product object that needs to be added to the store
        required: true
        schema:
          $ref: '#/definitions/Product'
      responses:
        405:
          description: Invalid input
  /product/{productId}:
    x-swagger-router-controller: product 
    get:
      tags:
      - product
      summary: Find product by ID
      description: Returns a single product
      operationId: getProductById
      produces:
      - application/json
      - application/xml
      parameters:
      - name: productId
        in: path
        description: ID of product to return
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Product'
        400:
          description: Invalid ID supplied
        404:
          description: Product not found
    post:
      tags:
      - product
      summary: Updates a product in the store with form data
      operationId: updateProductWithForm
      consumes:
      - application/x-www-form-urlencoded
      produces:
      - application/json
      - application/xml
      parameters:
      - name: productId
        in: path
        description: ID of product that needs to be updated
        required: true
        type: string
      - name: name
        in: formData
        description: Updated name of the product
        required: true
        type: string
      - name: price
        in: formData
        description: Updated price of the product
        required: true
        type: number
      responses:
        405:
          description: Invalid input
    delete:
      tags:
      - product
      summary: Deletes a product
      operationId: deleteProduct
      produces:
      - application/json
      - application/xml
      parameters:
      - name: api_key
        in: header
        required: false
        type: string
      - name: productId
        in: path
        description: Product id to delete
        required: true
        type: string
      responses:
        400:
          description: Invalid ID supplied
        404:
          description: Product not found
  /product/{productId}/reviews:
    x-swagger-router-controller: product 
    get:
      tags:
      - product
      summary: Find product reviews by ID
      description: Returns all reviews
      operationId: getProductReviewsById
      produces:
      - application/json
      - application/xml
      parameters:
      - name: productId
        in: path
        description: ID of product to return
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Product'
        400:
          description: Invalid ID supplied
        404:
          description: Product not found
    
  /user:
    post:
      tags:
      - user
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      produces:
      - application/json
      - application/xml
      parameters:
      - in: body
        name: body
        description: Created user object
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        default:
          description: successful operation
  /user/login:
    get:
      tags:
      - user
      summary: Logs user into the system
      operationId: loginUser
      produces:
      - application/json
      - application/xml
      parameters:
      - name: username
        in: query
        description: The user name for login
        required: true
        type: string
      - name: password
        in: query
        description: The password for login in clear text
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            type: string
          headers:
            X-Rate-Limit:
              type: integer
              format: int32
              description: calls per hour allowed by the user
            X-Expires-After:
              type: string
              format: date-time
              description: date in UTC when token expires
        400:
          description: Invalid username/password supplied
  /user/logout:
    get:
      tags:
      - user
      summary: Logs out current logged in user session
      operationId: logoutUser
      produces:
      - application/json
      - application/xml
      parameters: []
      responses:
        default:
          description: successful operation
  /user/{name}:
    get:
      tags:
      - user
      summary: Get user by user name
      operationId: getUserByName
      produces:
      - application/json
      - application/xml
      parameters:
      - name: name
        in: path
        description: The name that needs to be fetched. Use user1 for testing. 
        required: true
        type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/User'
        400:
          description: Invalid username supplied
        404:
          description: User not found
    post:
      tags:
      - user
      summary: Updated user
      description: This can only be done by the logged in user.
      operationId: updateUser
      consumes:
      - application/x-www-form-urlencoded
      produces:
      - application/json
      - application/xml
      parameters:
      - name: name
        in: path
        description: name that need to be updated
        required: true
        type: string
      - name: lastName
        in: formData
        description: Updated lastName of the user
        required: true
        type: string
      - name: email
        in: formData
        description: Updated email of the user
        required: true
        type: string  
      responses:
        400:
          description: Invalid user supplied
        404:
          description: User not found
    delete:
      tags:
      - user
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      produces:
      - application/json
      - application/xml
      parameters:
      - name: name
        in: path
        description: The name that needs to be deleted
        required: true
        type: string
      responses:
        400:
          description: Invalid username supplied
        404:
          description: User not found
    
definitions:
  User:
    type: object
    required:
    - name
    - lastName
    - email
    properties:
      id:
        type: string
        example: 5dfcc81f1672e3392029594f
      name:
        type: string
        example: name1
      lastName:
        type: string
        example: lastName1
      email:
        type: string
        example: email@gmail.com
  Product:
    type: object
    required:
    - name
    - price
    properties:
      id:
        type: string
        example: 5dfcc5223107143d18a709f5
      name:
        type: string
        example: milk
      price:
        type: number
        example: 520
      reviews:
        type: array
        items:
          type: string
        example: [review1, review2]
  
# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /node_js_mentoring/Homework7/1.0.0
schemes:
 - https
 - http